// Code generated by MockGen. DO NOT EDIT.
// Source: api/context.go

// Package mock is a generated GoMock package.
package mock

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/mattermost/mattermost-cloud/model"
	reflect "reflect"
)

// MockCloudClient is a mock of CloudClient interface
type MockCloudClient struct {
	ctrl     *gomock.Controller
	recorder *MockCloudClientMockRecorder
}

// MockCloudClientMockRecorder is the mock recorder for MockCloudClient
type MockCloudClientMockRecorder struct {
	mock *MockCloudClient
}

// NewMockCloudClient creates a new mock instance
func NewMockCloudClient(ctrl *gomock.Controller) *MockCloudClient {
	mock := &MockCloudClient{ctrl: ctrl}
	mock.recorder = &MockCloudClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCloudClient) EXPECT() *MockCloudClientMockRecorder {
	return m.recorder
}

// GetInstallation mocks base method
func (m *MockCloudClient) GetInstallation(arg0 string, arg1 *model.GetInstallationRequest) (*model.InstallationDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstallation", arg0, arg1)
	ret0, _ := ret[0].(*model.InstallationDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInstallation indicates an expected call of GetInstallation
func (mr *MockCloudClientMockRecorder) GetInstallation(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstallation", reflect.TypeOf((*MockCloudClient)(nil).GetInstallation), arg0, arg1)
}

// GetInstallations mocks base method
func (m *MockCloudClient) GetInstallations(arg0 *model.GetInstallationsRequest) ([]*model.InstallationDTO, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInstallations", arg0)
	ret0, _ := ret[0].([]*model.InstallationDTO)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInstallations indicates an expected call of GetInstallations
func (mr *MockCloudClientMockRecorder) GetInstallations(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInstallations", reflect.TypeOf((*MockCloudClient)(nil).GetInstallations), arg0)
}

// GetClusterInstallation mocks base method
func (m *MockCloudClient) GetClusterInstallation(arg0 string) (*model.ClusterInstallation, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetClusterInstallation", arg0)
	ret0, _ := ret[0].(*model.ClusterInstallation)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetClusterInstallation indicates an expected call of GetClusterInstallation
func (mr *MockCloudClientMockRecorder) GetClusterInstallation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetClusterInstallation", reflect.TypeOf((*MockCloudClient)(nil).GetClusterInstallation), arg0)
}

// ExecClusterInstallationCLI mocks base method
func (m *MockCloudClient) ExecClusterInstallationCLI(arg0, arg1 string, arg2 []string) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ExecClusterInstallationCLI", arg0, arg1, arg2)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ExecClusterInstallationCLI indicates an expected call of ExecClusterInstallationCLI
func (mr *MockCloudClientMockRecorder) ExecClusterInstallationCLI(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ExecClusterInstallationCLI", reflect.TypeOf((*MockCloudClient)(nil).ExecClusterInstallationCLI), arg0, arg1, arg2)
}

// GetGroup mocks base method
func (m *MockCloudClient) GetGroup(arg0 string) (*model.Group, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetGroup", arg0)
	ret0, _ := ret[0].(*model.Group)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetGroup indicates an expected call of GetGroup
func (mr *MockCloudClientMockRecorder) GetGroup(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetGroup", reflect.TypeOf((*MockCloudClient)(nil).GetGroup), arg0)
}
